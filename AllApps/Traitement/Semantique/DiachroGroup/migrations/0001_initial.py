# Generated by Django 2.1.7 on 2021-04-15 18:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('TableauEmb', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FastTextDiachro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomresult', models.CharField(max_length=200, unique=True)),
                ('user_restrict2', models.CharField(max_length=100)),
                ('terme', models.CharField(max_length=100)),
                ('nresult', models.CharField(max_length=50)),
                ('methode_clustering', models.CharField(choices=[('AggloMax', 'AggloMax'), ('AggloMoyenne', 'AggloMoyenne')], default=None, max_length=100)),
                ('ncluster', models.CharField(max_length=50)),
                ('compareJustNewRevue', models.BooleanField()),
                ('stop_mots', models.TextField()),
                ('selectLink', models.CharField(choices=[('Methode theorie initiale', 'Methode theorie initiale'), ('Methode DiachoExplorer', 'Methode DiachoExplorer'), ('Tous sans selection', 'Tous sans selection')], default=None, max_length=100)),
                ('calculPoidsLabel', models.CharField(choices=[('Simi cos par rapport terme initial', 'Simi cos par rapport terme initial'), ('1 pour tous les termes', '1 pour tous les termes'), ('1 pour tous les termes et label max somme intra simi cos', '1 pour tous les termes et label max somme intra simi cos')], default=None, max_length=100)),
                ('taillecluster', models.CharField(choices=[('Nombre termes constitutifs cluster', 'Nombre termes constitutifs cluster'), ('Nombre occurences des termes constitutifs cluster', 'Nombre occurences des termes constitutifs cluster')], default=None, max_length=100)),
                ('couleursRevues', models.CharField(max_length=200)),
                ('seuil100', models.PositiveIntegerField()),
                ('modelc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TableauEmb.FastText')),
            ],
        ),
        migrations.CreateModel(
            name='GloveDiachro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomresult', models.CharField(max_length=200, unique=True)),
                ('user_restrict2', models.CharField(max_length=100)),
                ('terme', models.CharField(max_length=100)),
                ('nresult', models.CharField(max_length=50)),
                ('methode_clustering', models.CharField(choices=[('AggloMax', 'AggloMax'), ('AggloMoyenne', 'AggloMoyenne')], default=None, max_length=100)),
                ('ncluster', models.CharField(max_length=50)),
                ('compareJustNewRevue', models.BooleanField()),
                ('stop_mots', models.CharField(blank=True, max_length=800)),
                ('selectLink', models.CharField(choices=[('Methode theorie initiale', 'Methode theorie initiale'), ('Methode DiachoExplorer', 'Methode DiachoExplorer'), ('Tous sans selection', 'Tous sans selection')], default=None, max_length=100)),
                ('calculPoidsLabel', models.CharField(choices=[('Simi cos par rapport terme initial', 'Simi cos par rapport terme initial'), ('1 pour tous les termes', '1 pour tous les termes'), ('1 pour tous les termes et label max somme intra simi cos', '1 pour tous les termes et label max somme intra simi cos')], default=None, max_length=100)),
                ('taillecluster', models.CharField(choices=[('Nombre termes constitutifs cluster', 'Nombre termes constitutifs cluster'), ('Nombre occurences des termes constitutifs cluster', 'Nombre occurences des termes constitutifs cluster')], default=None, max_length=100)),
                ('couleursRevues', models.CharField(max_length=200)),
                ('seuil100', models.PositiveIntegerField()),
                ('modelc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TableauEmb.Glove')),
            ],
        ),
        migrations.CreateModel(
            name='Word2VecDiachro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomresult', models.CharField(max_length=200, unique=True)),
                ('user_restrict2', models.CharField(max_length=100)),
                ('terme', models.CharField(max_length=100)),
                ('nresult', models.CharField(max_length=50)),
                ('methode_clustering', models.CharField(choices=[('AggloMax', 'AggloMax'), ('AggloMoyenne', 'AggloMoyenne')], default=None, max_length=100)),
                ('ncluster', models.CharField(max_length=50)),
                ('compareJustNewRevue', models.BooleanField()),
                ('stop_mots', models.TextField()),
                ('selectLink', models.CharField(choices=[('Methode theorie initiale', 'Methode theorie initiale'), ('Methode DiachoExplorer', 'Methode DiachoExplorer'), ('Tous sans selection', 'Tous sans selection')], default=None, max_length=100)),
                ('calculPoidsLabel', models.CharField(choices=[('Simi cos par rapport terme initial', 'Simi cos par rapport terme initial'), ('1 pour tous les termes', '1 pour tous les termes'), ('1 pour tous les termes et label max somme intra simi cos', '1 pour tous les termes et label max somme intra simi cos')], default=None, max_length=100)),
                ('taillecluster', models.CharField(choices=[('Nombre termes constitutifs cluster', 'Nombre termes constitutifs cluster'), ('Nombre occurences des termes constitutifs cluster', 'Nombre occurences des termes constitutifs cluster')], default=None, max_length=100)),
                ('couleursRevues', models.CharField(max_length=200)),
                ('seuil100', models.PositiveIntegerField()),
                ('modelc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TableauEmb.Word2Vec')),
            ],
        ),
    ]
